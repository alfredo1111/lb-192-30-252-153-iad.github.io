var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
define(["require", "exports", "./Framework/Shared/DataConstants", "./Framework/Model/Contracts/Diagram", "./Handlers/ErrorHandler", "./Handlers/MessageHandler", "./Handlers/RoutingHandler", "./Framework/Telemetry/Telemetry", "./Framework/Shared/Disposable", "./Framework/UI/Refresh", "./Framework/UI/Spinner", "./Handlers/WinJSHandlers", "./Services/AzureResourceManagerService", "./Services/HDInsightArmService", "./Services/AzureInsightsService", "./Framework/Model/DataFactoryCache", "./Framework/Model/ArmDataFactoryCache", "./Services/DataFactoryService", "./Framework/Util/ResourceIdUtil", "./Framework/Model/Contracts/Encodable", "./Framework/Util/Log"], function (require, exports, DataConstants, DiagramContracts, ErrorHandler, MessageHandler_1, RoutingHandler, Telemetry, Disposable, Refresh, Spinner, WinJSHandlers, ArmService, HDInsightArmService, InsightService, DataFactoryCache, ArmDataFactoryCache, DataFactoryService, ResourceIdUtil, Encodable, Log) {
    "use strict";
    var logger = Log.getLogger({
        loggerName: "AppContext"
    });
    var AppContext = (function (_super) {
        __extends(AppContext, _super);
        function AppContext() {
            var _this = this;
            _super.call(this);
            this.spinner = null;
            this.showingDashboard = ko.observable(true);
            this.factoryId = ko.observable(null);
            this._commandGroups = {};
            this.routingHandlerSubscription = null;
            this.splitFactoryId = ko.computed(function () {
                var factoryId = _this.factoryId();
                if (!factoryId) {
                    return null;
                }
                var split = ResourceIdUtil.splitResourceString(factoryId);
                var subscriptionData = {
                    subscriptionId: split.subscriptionId,
                    resourceGroupName: split.resourceGroupName,
                    resourceName: split.dataFactoryName,
                    provider: DataConstants.DataFactoryProvider
                };
                Microsoft.DataStudio.Diagnostics.Hub.DiagnosticsHub.configureSusbscription(subscriptionData);
                return split;
            });
            this.diagramContext = ko.observable({
                diagramMode: DiagramContracts.DiagramMode.Factory,
                diagramModeParameters: null
            });
            this.spinner = new Spinner.SpinnerViewModel();
            this.refreshHandler = new Refresh.RefreshHandler(this._lifetimeManager);
            this.moduleName = ko.pureComputed(function () {
                switch (Microsoft.DataStudio.Application.ShellContext.CurrentRoute().view.toLowerCase()) {
                    case DataConstants.AuthoringModuleName.toLowerCase():
                        return DataConstants.AuthoringModuleName;
                    case DataConstants.MonitoringModuleName.toLowerCase():
                        return DataConstants.MonitoringModuleTelemetryName;
                    case DataConstants.PowerCopyToolModuleName.toLowerCase():
                        return DataConstants.PowerCopyToolModuleTelemetryName;
                    case DataConstants.HomeModuleName.toLowerCase():
                        return DataConstants.HomeModuleName;
                    case DataConstants.CopyActivityMonitorModuleName.toLowerCase():
                        return DataConstants.CopyActivityMonitorModuleName;
                    default:
                        throw "Unknown module name.";
                }
            });
            this.dataFactoryService = new DataFactoryService.DataFactoryService(this, this.moduleName);
            this.armService = new ArmService.AzureResourceManagerService(this, this.moduleName);
            this.insightsService = new InsightService.AzureInsightsService(this);
            this.hdInsightArmService = new HDInsightArmService.HDInsightArmService(this);
            this.dataFactoryCache = new DataFactoryCache.DataFactoryCache(this.dataFactoryService);
            this.armDataFactoryCache = new ArmDataFactoryCache.DataFactoryCache(this.armService);
            this.stringMessageHandler = new MessageHandler_1.MessageHandler();
            this.resourceActionHandler = new MessageHandler_1.MessageHandler();
            this.selectionHandler = new MessageHandler_1.SelectionHandler([], function (state) {
                return !state || state.length === 0;
            });
            this.activityRunUpdateHandler = new MessageHandler_1.ActivityRunUpdateHandler();
            this.dialogHandler = new WinJSHandlers.DialogHandler();
            this.flyoutHandler = new WinJSHandlers.FlyoutHandler();
            this.calloutHandler = new WinJSHandlers.CalloutHandler();
            this.errorHandler = new ErrorHandler.ErrorHandler(this);
            this.routingHandler = new RoutingHandler.RoutingHandler(this);
            this.authoringEntityStore = null;
            Telemetry.instance.updateServiceObject(this.dataFactoryService);
            this._lifetimeManager.registerForDispose(Telemetry.instance);
            this._lifetimeManager.registerForDispose(this.splitFactoryId);
            this.routingHandlerSubscription = {
                name: AppContext.className,
                callback: function (message) {
                    var pipelineName = message[RoutingHandler.urlKeywords.pipeline.value];
                    if (pipelineName) {
                        _this.selectionHandler.setDefaultState([new Encodable.PipelineEncodable(pipelineName)]);
                        if (_this.moduleName() === DataConstants.AuthoringModuleName) {
                        }
                    }
                    else {
                        if (_this.splitFactoryId()) {
                            _this.selectionHandler.setDefaultState([new Encodable.DataFactoryEncodable(_this.splitFactoryId().dataFactoryName)]);
                        }
                    }
                }
            };
            this.routingHandlerSubscription.callback(this.routingHandler.getState());
            this.routingHandler.register(this.routingHandlerSubscription);
            if (Microsoft.DataStudio.Application.ShellContext.LoadDuration) {
                var logObj = {
                    time: Microsoft.DataStudio.Application.ShellContext.LoadDuration.toString()
                };
                var i = 1;
                while (Microsoft.DataStudio.Application.ShellContext["LoadDuration" + i]) {
                    logObj["time" + i] = Microsoft.DataStudio.Application.ShellContext["LoadDuration" + i];
                    i++;
                }
                Telemetry.instance.logEvent(new Telemetry.Event(this.factoryId(), "Shell", Telemetry.Action.initialize, logObj));
            }
        }
        AppContext.getInstance = function () {
            if (!AppContext._instance) {
                AppContext._instance = new AppContext();
            }
            return AppContext._instance;
        };
        AppContext.buildNumber = function () {
            var parsed = /(\d+)\.(\d+)$/.exec(this._versionInfo);
            if (!parsed) {
                return "local";
            }
            return moment("4/7/2007").add(parsed[1], "days").format("YYYYMMDD") + "." + parsed[2];
        };
        AppContext.prototype.getViewContext = function (contextConstructor) {
            if (this.viewContext) {
                if (this.viewContext instanceof contextConstructor) {
                    return this.viewContext;
                }
                this.viewContext.dispose();
            }
            this.viewContext = new contextConstructor;
            return this.viewContext;
        };
        AppContext.prototype.registerContextMenuCommandGroup = function (commandGroup) {
            this._commandGroups[commandGroup.commandGroupName] = commandGroup;
        };
        AppContext.prototype.unregisterContextMenuCommandGroup = function (commanGroupName) {
            delete this._commandGroups[commanGroupName];
        };
        AppContext.prototype.getContextMenuCommandGroup = function (commandGroupName) {
            var commandGroup = this._commandGroups[commandGroupName];
            if (!commandGroup) {
                logger.logError("AppContext: commandGroupName {0} is not defined".format(commandGroupName));
            }
            return commandGroup;
        };
        AppContext.prototype.addForDispose = function (obj) {
            this._lifetimeManager.registerForDispose(obj);
        };
        AppContext.prototype.dispose = function () {
            _super.prototype.dispose.call(this);
            this.routingHandler.unregister(this.routingHandlerSubscription);
        };
        AppContext.prototype.openProperties = function () {
            $(".rightSidePanel .tabview-tabs_1 ").click();
        };
        AppContext.prototype.openActivityWindowExplorer = function () {
            $(".rightSidePanel .tabview-tabs_0 ").click();
        };
        AppContext.className = "AppContext";
        AppContext._versionInfo = "LOCAL_BUILD";
        return AppContext;
    }(Disposable.RootDisposable));
    exports.AppContext = AppContext;
});
//# sourceMappingURL=AppContext.js.mapvû>bö       [Öû[Öÿ?§çY[ØåS   ƒ    :https://datafactory-endpoint.azureedge.net/node_modules/@ms-atlas-module/datastudio-datafactory/scripts/AppContext.js?v=1.0.4164.1 necko:classified 1 strongly-framed 1 security-info FnhllAKWRHGAlo+ESXykKAAAAAAAAAAAwAAAAAAAAEaphjojH6pBabDSgSnsfLHeAAQAAgAAAAAAAAAAAAAAAAAAAAAB4vFIJp5wRkeyPxAQ9RJGKPqbqVvKO0mKuIl8ec8o/uhmCjImkVxP+7sgiYWmMt8FvcOXmlQiTNWFiWlrbpbqgwAAAAAAAAOwMIIDrDCCApSgAwIBAgIERTJgTjANBgkqhkiG9w0BAQsFADCBijEUMBIGA1UEBhMLUG9ydFN3aWdnZXIxFDASBgNVBAgTC1BvcnRTd2lnZ2VyMRQwEgYDVQQHEwtQb3J0U3dpZ2dlcjEUMBIGA1UEChMLUG9ydFN3aWdnZXIxFzAVBgNVBAsTDlBvcnRTd2lnZ2VyIENBMRcwFQYDVQQDEw5Qb3J0U3dpZ2dlciBDQTAeFw0xNDEwMjgxMzEyMTBaFw0zODEwMjgxMzEyMTBaMHIxFDASBgNVBAYTC1BvcnRTd2lnZ2VyMRQwEgYDVQQKEwtQb3J0U3dpZ2dlcjEXMBUGA1UECxMOUG9ydFN3aWdnZXIgQ0ExKzApBgNVBAMTImRhdGFmYWN0b3J5LWVuZHBvaW50LmF6dXJlZWRnZS5uZXQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCKn7emKINsnWqPZ+C/VsqbQf/l4NsmIh34bXBR0xdNg9bfb+xcoghRlmbPjhZ/A26A2gJ6Rrg2d0GGMLpbqA8nTlRRGXEAD39321zk4ye09ElXClvqguGqdqOJpPQ05DPFD6wSOq+KVAEblE5bi+LMqBLipDERzgUe7xzeqVVk0i0ldh9yQOIk3YuzcBR9igSEuw5qladmMYvXKHYM9YZz0R7axMc8xAtadK7C9KfFPfEI5LS2nhmy4vBrTgFyYhfkEvKfmIj6HTX0ISFCAC2llcBLpEDcuiW76tAHp1pXDeWtSeaV36AeOctdleVgrbmsGs3fu6ppuRcWjEZUbjE3AgMBAAGjMTAvMC0GA1UdEQQmMCSCImRhdGFmYWN0b3J5LWVuZHBvaW50LmF6dXJlZWRnZS5uZXQwDQYJKoZIhvcNAQELBQADggEBAD5nTga0zudMitI/u0TfDiXUvU9MHWtnM1QsCR52LG8/P3zHlMPdW01WDRZUWTzCGka9MJHNjppqHPNsxY69i49nAksLYLzG7nK57bfwfvJQH/v27QUFGFMmKZNtpz+523V8pi+RJR9/DcmY0SQslyt1+Cj1SViKKOJYr8DiCwrYSUxWRp0XCM6ACnyoVhILHxIff7DQUE7Qq8eLX2UMcsrHHrlmbWpSCkEMtikIahIK4D2jjHj/CFWVzmKApRGZHRCenGUCvwPc6+mdefq6dna4yuo/9sC8unizedWeSL+sIj+Qxy7egEU4w3ZyvM8xUIozSNHY/VVwXW5ypPYqSlDALwEDAAAAAAEBAAAAAA== request-method GET request-Accept-Encoding gzip, deflate, br response-head HTTP/1.1 200 OK
Content-Type: application/javascript
Last-Modified: Sat, 06 Oct 2018 23:13:01 GMT
Accept-Ranges: bytes
Etag: "6652f320ca5dd41:0"
Server: Microsoft-IIS/8.5
X-Frame-Options: AllowAll
X-XSS-Protection: 1; mode=block
X-Content-Type-Options: nosniff
Strict-Transport-Security: max-age=15724800; includeSubDomains
Access-Control-Allow-Origin: *
Vary: Accept-Encoding
Content-Length: 9649
Date: Sun, 28 Oct 2018 18:50:38 GMT
 original-response-headers Content-Type: application/javascript
Last-Modified: Sat, 06 Oct 2018 23:13:01 GMT
Accept-Ranges: bytes
Etag: "6652f320ca5dd41:0"
Server: Microsoft-IIS/8.5
X-Frame-Options: AllowAll
X-XSS-Protection: 1; mode=block
X-Content-Type-Options: nosniff
Strict-Transport-Security: max-age=15724800; includeSubDomains
Access-Control-Allow-Origin: *
Vary: Accept-Encoding
Content-Length: 9649
Date: Sun, 28 Oct 2018 18:50:38 GMT
Connection: close
 uncompressed-len 0 net-response-time-onstart 4031 net-response-time-onstop 4032   %±